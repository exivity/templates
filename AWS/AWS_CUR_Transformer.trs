option loglevel = INFO
# ===================================================================
#
# Example Transformer for AWS CUR for S3 based Extractions
#
# ===================================================================
# Import Current Month of CUR Files
#
# Current list of fields in the include option matches the defined data definition document of required fields.
#
import system/extracted/aws/${dataYear}${dataMonth}/.*-[0-9]*\.csv source AWS_CUR alias usage1 options {
	pattern on # Change the value depending on your report name
	filter = (["lineItem/UsageStartDate"] =~ /${dataYear}-${dataMonth}-${dataDay}.*/)
	include bill/BillingEntity lineItem/UsageAccountId lineItem/LineItemType lineItem/UsageStartDate lineItem/UsageEndDate lineItem/ProductCode lineItem/UsageType lineItem/Operation lineItem/AvailabilityZone lineItem/ResourceId lineItem/UsageAmount lineItem/UnblendedRate lineItem/UnblendedCost lineItem/BlendedCost product/ProductName product/operatingSystem product/instanceType product/location pricing/term pricing/unit reservation/AmortizedUpfrontCostForUsage reservation/AvailabilityZone reservation/EffectiveCost reservation/UnusedQuantity reservation/UnusedRecurringFee
}

# rename system generated names to user friendly names for display on reports
rename column "lineItem/UsageAccountId" to LinkedAccountId
rename column pricing/term to "Pricing Type"
rename column product/operatingSystem to "OS_Type"
rename column lineItem/ResourceId to ResourceId

# Fix data in Pricing Type, OnDemand becomes On Demand
replace "OnDemand" in "Pricing Type" with "On Demand"

# ====================================================================
# Uncomment this part to correlate LinkedAccountId with Customer Names 
# Set linked_accounts to the real customer name.
# Import the Customer Lookup table.

###
# import "import/lookup/linked_accounts.csv" source aws alias linked_accounts
# correlate aws.linked_accounts.LinkedAccountName using LinkedAccountId
# rename column LinkedAccountName to Customer
###

# remove irrelevant snapshot and workspace resource details to preserve cloud source resource name
option overwrite = no
set ResourceId to "Generic Resource/"
split ResourceId using "/"
delete columns ResourceId ResourceId_split2 ResourceId_split3 ResourceId_split4
rename column ResourceId_split1 to CS_ResourceId

# set system variables for Rate, CoGS and Units of measure
# NOTE: the rate for Reserved Instances is not supplied from source so we must calculate it
rename column pricing/unit to Units
# put "Units" into data where there is no value
set Units to "Units"
# For PartialUpfrontCost we must also include reservation/AmortizedUpfrontCostForUsage to get the correct cs_rate
# that is (reservation/EffectiveCost - reservation/AmortizedUpfrontCostForUsage) / lineItem/UsageAmount
# The RDS calculation is believed to be correct, but we have not yet tested because of no test data yet
create column cs_cogs value 0
# need to turn on overwrite because the column is already set to 0
option overwrite = yes
create column cs_rate
calculate column cs_rate as column "lineItem/BlendedCost" / column "lineItem/UsageAmount"

if (!@COLUMN_EXISTS("reservation/AvailabilityZone")) {
	create column "reservation/AvailabilityZone"
	set "reservation/AvailabilityZone" as "lineItem/AvailabilityZone"
}

# Modification May 19

where ((["Pricing Type"] == "") && (["lineItem/LineItemType"] != "RIFee" )) {
	calculate column cs_rate as column "lineItem/UnblendedCost" / column "lineItem/UsageAmount"
	set "Pricing Type" to "On Demand"
}

# End of Modification
where ((["Pricing Type"] == "Reserved") && (["product/ProductName"] == "Amazon Elastic Compute Cloud")) {
	move rows to EXCEPTIONS.new
}

#Environment Improvement Suggestions
where ( (["lineItem/LineItemType"] == "DiscountedUsage") && (["reservation/EffectiveCost"] > "0") && (["product/ProductName"] == "Amazon Elastic Compute Cloud")) {
	#calculate column "EC-AUFCFU" as column "reservation/EffectiveCost" - column reservation/AmortizedUpfrontCostForUsage
	#calculate column ResRate as column "EC-AUFCFU" / column lineItem/UsageAmount
	#set cs_rate as ResRate
	move rows to EXCEPTIONS.new
}
where ((["Pricing Type"] == "Reserved") && (["product/ProductName"] == "Amazon Relational Database Service")) {
	move rows to EXCEPTIONS.new
}
option overwrite = no
# Change the ProductName for Amazon Elastic Compute into multiple categories: Virtual Machines, EBS Storage, Snapshots, ElasticIP, LoadBalancer
# and Other Services to help identify these blocks of EC2 Services.
create mergedcolumn ProdName from product/ProductName
option overwrite = yes
where (["lineItem/UsageType"] =~ /.*(BoxUsage).*/) {
	set ProdName to "Amazon EC2 VM Services"
}
where ((["lineItem/UsageType"] =~ /.*(EBS:Volume).*/) || (["lineItem/UsageType"] =~ /.*(EBSOptimized).*/)) {
	set ProdName to "Amazon EC2 EBS Storage"
}
where (["lineItem/UsageType"] =~ /.*(SnapshotUsage).*/) {
	set ProdName to "Amazon EC2 EBS Snapshot"
}
where (["lineItem/UsageType"] =~ /.*(ElasticIP).*/) {
	set ProdName to "Amazon EC2 ElasticIP"
}
where (["lineItem/UsageType"] =~ /.*(LoadBalancer).*/) {
	set ProdName to "Amazon EC2 LoadBalancer"
}
where ((["ProdName"] == "Amazon Elastic Compute Cloud") && (["lineItem/LineItemType"] != "RIFee")) {
#Environment Improvement Suggestions
	replace "Amazon Elastic Compute Cloud" in ProdName with "Amazon EC2 Other Services"
}
# If the server is not part of Amazon EC2 then we need to switch the Product Name back to its original Product Name.
# Example - a DynamoDB server should be in the AWS DynamoDB group.
where ( ( ["ProdName"] == "Amazon EC2 VM Services" ) && ( ["product/ProductName"] != "Amazon Elastic Compute Cloud" ) ) {
	set ProdName as product/ProductName
}
# Move ProdName back to ProductName and delete the working variable ProdName
set product/ProductName as ProdName
Delete column ProdName
# If the UnblendedCost is less than 0 and UnblendedRate is blank - then we have an issued Credit.
# Build a credit record by setting the Rate to 1, and UsageAmount to the credit.
# Add metadata tag value for Business Unit, Landscape, Application and ResourceId.
create column Credit value "Credit"
option overwrite = yes
where (["lineItem/LineItemType"] == "Credit") {
	create mergedcolumn temp_landscape separator " " from Credit product/ProductName
	create mergedcolumn temp_application separator " " from Credit lineItem/UsageType
	set CS_ResourceId to "Credit - Not Named"
	set lineItem/AvailabilityZone as product/location
	set lineItem/UsageAmount as "lineItem/UnblendedCost"
	set cs_rate to 1
}
delete columns Credit temp_landscape temp_application
# Capture UnusedQuantity for Reserved Instances that are 'RIFee' and not ProductName "Amazon DynamoDB"
# This is only done as part of the End of Month processing. At this time we only know of Reserves for
# EC2 and RDS instances. Will need to code for each product type.
create column ResZone value "Reservation Zone"
where ((["lineItem/LineItemType"] == "RIFee") && (["product/ProductName"] == "Amazon Elastic Compute Cloud")) {
# set lineItem/UsageAmount as reservation/UnusedQuantity
	set "lineItem/AvailabilityZone" as reservation/AvailabilityZone
	create mergedcolumn temp_resAZ separator " " from ResZone lineItem/AvailabilityZone
	set CS_ResourceId to "Under Utilized Reserve - Not Named"
	replace "Amazon Elastic Compute Cloud" in product/ProductName with "Amazon EC2 VM Services"
}
#Environment Improvement Suggestions
where ((["lineItem/LineItemType"] == "RIFee") && (["product/ProductName"] == "Amazon Relational Database Service")) {
# set lineItem/UsageAmount as reservation/UnusedQuantity
	set lineItem/AvailabilityZone as reservation/AvailabilityZone
	create mergedcolumn temp_RDSresAZ separator " " from ResZone lineItem/AvailabilityZone
	set CS_ResourceId to "Under Utilized Reserve - Not Named"
}
delete columns ResZone temp_resAZ temp_RDSresAZ
option overwrite = no
# service_opp will be used in the key value and better describe the service description
create column service_opp
where ( ["lineItem/AvailabilityZone"] == "" ) {
	set service_opp as lineItem/Operation
	replace "None" in service_opp
	replace "Unknown" in service_opp
	replace "EBS:" in service_opp
	replace "Not Applicable" in service_opp
}

# create service names and key's
create mergedcolumn service_name separator " " from lineItem/UsageType OS_Type lineItem/AvailabilityZone service_opp
replace "HeavyUsage" in service_name with "Reserved"
replace "Heavy Utilization" in service_name with "Reserved"
create mergedcolumn service_key separator "-" from "Pricing Type" lineItem/ProductCode lineItem/UsageType OS_Type lineItem/Operation lineItem/AvailabilityZone

# If the usage record is for an AWS Marketplace resource, then modify the service_name and ProductName so that the descriptions match the display
# formats used by non-Marketplace resources.
option overwrite = yes
where ( ["bill/BillingEntity"] == "AWS Marketplace" ) {
create mergedcolumn mktplace_service_name separator " " from product/ProductName lineItem/UsageType OS_Type lineItem/AvailabilityZone service_opp
replace " SoftwareUsage" in mktplace_service_name
set service_name as mktplace_service_name
# Environment Improvement Suggestions
set product/ProductName as bill/BillingEntity
}
delete column mktplace_service_name

# Fill blank values in service_name
option overwrite = no
create mergedcolumn service_name_blank separator " " from product/ProductName lineItem/LineItemType
set service_name as service_name_blank
set CS_ResourceId as service_name_blank
delete column service_name_blank

# aggregate the XXXX DSET to combine like records into a single entry and sum the UsageQty
aggregate AWS_CUR.usage1 notime LinkedAccountId match service_key match cs_rate match CS_ResourceId match lineItem/UsageAmount sum
rename column OS_Type to "Operating System"
rename column lineItem/UsageAmount to "UsageQuanity"
rename column lineItem/AvailabilityZone to "CS_Location"
rename column LinkedAccountId to "CS_AccountID"
rename column lineItem/UsageStartDate to "CS_StartDate"
rename column lineItem/UsageType to "UsageType"
rename column product/ProductName to "Product Group"
rename column bill/BillingEntity to "Billing Entity"
rename column lineItem/LineItemType to "Line Item Type"
create column interval value individually

# Export EXCEPTIONS and copy of the data load set to .csv file on local server
# export EXCEPTIONS.001_records_no_fee_or_rate as "EXCEPTIONS\001_records_no_fee_or_rate_CUR_EOM_${dataDate}.csv"
# delete columns that we do not want to load into the database
delete columns service_opp KeyExtention App Service Bundl BU RecID Id_Program lineItem/Operation lineItem/ProductCode lineItem/UnblendedRate lineItem/UnblendedCost product/instanceType product/location reservation/AvailabilityZone reservation/UnusedQuantity EXIVITY_AGGR_COUNT
delete columns reservation/AmortizedUpfrontCostForUsage reservation/EffectiveCost reservation/UnusedRecurringFee
export AWS_CUR.usage1 as "aws/CUR_with_etl_dataout_EOM_${dataDate}.csv"
default dset AWS_CUR.usage1
export EXCEPTIONS.new as Exceptions_${dataDate}.csv
finish

#option services = overwrite

services {
    effective_date = 20190101
    service_type = automatic
    description_col = service_name # column name
    category_col = "Product Group" # column with category value
    instance_col = CS_ResourceId # the unique instance i.e. vm-id, username, etc
    usages_col = service_key # the column containing the name of the consumed service
    rate_col = cs_rate # the column containing the rate values
    cogs_col = cs_cogs # the column containing the CoG rate values
    interval_col = interval # the column containing the interval (i.e. individually)
    unit_label_col = Units # the column containing the unit label
    consumption_col = UsageQuanity # the column containing the consumed quantity
}
